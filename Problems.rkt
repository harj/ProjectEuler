#lang racket/load
(require trace)

#|
Problem 1
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
|#

(define (divisible n d)
  (= 0 (remainder n d)))

(define (multiple-3-5 n)
  (or (divisible n 3)
      (divisible n 5)))

(define (sum-natural limit)
  (define (itr-sum result next)
    (cond ((>= next limit)
           result)
          ((multiple-3-5 next)
           (itr-sum (+ result next) (+ next 1)))
          (else (itr-sum result (+ next 1)))))
  (itr-sum 0 1))

#|
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
|#




  
  



